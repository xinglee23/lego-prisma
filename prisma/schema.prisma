datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ActivityTypeEnum {
  ACTIVITY_COMBO
  ACTIVITY_H5
  ACTIVITY_FORM
}

model Activity {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  activity_id       String   @unique
  name              String
  activity_show_name String?
  type              ActivityTypeEnum
  source            String
  work_status       String
  url               String?
  second_work_status String?
  creator_id        String
  create_time       DateTime
  update_time       DateTime
  template_config   Json?
  setting_config    Json?
  validated         Boolean?
  preview_url       String?
  plugin_type       String?
  poster_url        String?
  tags              ActivityTag[]
  folder_id         String?  @db.ObjectId
  folder            Folder?  @relation(fields: [folder_id], references: [id])
}

model Tag {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  activities ActivityTag[]
}

model ActivityTag {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  activity_id String   @db.ObjectId
  tag_id      String   @db.ObjectId
  activity    Activity @relation(fields: [activity_id], references: [id])
  tag         Tag      @relation(fields: [tag_id], references: [id])

  @@unique([activity_id, tag_id])
}

model Folder {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  folder_id   String     @unique
  folder_name String
  activities  Activity[]
}

model User {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  user_name  String
  user_cname String
  user_id    Int    @unique
}

model Template {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  template_id     String   @unique
  category_code   String?
  type            String
  scene_code      String?
  name            String
  description     String?
  use_count       Int      @default(0)
  preview_url     String?
  thumb_url       String?
  thumb_height    Int?
  thumb_width     Int?
  template_config Json?
  plugin_config   Json?
  scene_config    Json?
  setting_config  Json?
  source          String?
  work_status     String
  creator_id      String
  publish_time    DateTime?
  create_time     DateTime
  update_time     DateTime
}

model QuestionSuit {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  question_suit_name String
  question_count    Int
  questions         Question[]
}

model Question {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  question_name   String
  question_type   String
  question_suit   QuestionSuit @relation(fields: [question_suit_id], references: [id])
  question_suit_id String       @db.ObjectId
}

model File {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  filename String
  url      String
}